% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trendfilter.R
\name{trendfilter}
\alias{trendfilter}
\title{Fit a trend filtering model}
\usage{
trendfilter(
  x,
  y,
  weights = NULL,
  lambdas,
  k = 2L,
  obj_tol = 1e-10,
  max_iter = length(y),
  mc_cores = parallel::detectCores() - 4,
  ...
)
}
\arguments{
\item{x}{Vector of observed values for the input variable.}

\item{y}{Vector of observed values for the output variable.}

\item{weights}{(Optional) Weights for the observed output measurements. The weights are
defined as the inverse variance of the additive noise that contaminates the
observed output signal. When the noise is expected to have an equal
variance \mjseqn{\sigma^2} for all observations, a scalar may be passed to
\code{weights}, i.e. \verb{weights = }\mjseqn{1/\sigma^2}. Otherwise, \code{weights} must
be a vector with the same length as \code{x} and \code{y}.}

\item{lambdas}{Vector of one or more hyperparameter values to fit a model for.}

\item{k}{Degree of the polynomials that make up the piecewise-polynomial trend
filtering estimate. Defaults to \code{k = 2} (i.e. a piecewise quadratic
estimate). Must be one of \verb{k = 0,1,2}. Higher order polynomials are
disallowed since they yield no predictive benefits over \code{k = 2} and their
use can lead to instability in the convex optimization.}

\item{obj_tol}{(Optional) Stopping criterion for the ADMM algorithm. If the relative
change in the trend filtering objective function between two successive
iterations is less than \code{obj_tol}, the algorithm terminates. The
algorithm's termination can also result from it reaching the maximum
tolerable iterations set by the \code{max_iter} parameter below. The \code{obj_tol}
parameter defaults to \code{obj_tol = 1e-10}. The \code{obj_func} vector returned
within the \code{trendfilter()} output gives the relative change in the trend
filtering objective function over the algorithm's final iteration, for
every candidate hyperparameter value.}

\item{max_iter}{(Optional) Maximum number of ADMM iterations that we will tolerate.
Defaults to \code{max_iter = length(y)}. The actual number of iterations
performed by the algorithm, for every candidate hyperparameter value, is
returned in the \code{n_iter} vector within the \code{trendfilter()} output. If any
of the elements of \code{n_iter} are equal to \code{max_iter}, the tolerance
defined by \code{obj_tol} has not been attained and \code{max_iter} may need to be
increased.}

\item{mc_cores}{Number of cores to utilize for parallel computing. Defaults to the number
of cores detected, minus 4.}

\item{...}{Additional named arguments. Currently unused.}
}
\value{
An object of class \code{'trendfilter'}. This is a list with the following
elements:
\enumerate{
\item \code{x}
\item \code{y}
}
}
\description{
Fit a trend filtering model
}
\references{
\enumerate{
\item Politsch et al. (2020a). Trend filtering – I. A modern statistical tool
for time-domain astronomy and astronomical spectroscopy. \emph{MNRAS}, 492(3),
p. 4005-4018.
[\href{https://academic.oup.com/mnras/article/492/3/4005/5704413}{Publisher}]
[\href{https://arxiv.org/abs/1908.07151}{arXiv}]
[\href{https://capolitsch.github.io/trendfiltering/authors.html}{BibTeX}].
\item Politsch et al. (2020b). Trend Filtering – II. Denoising astronomical
signals with varying degrees of smoothness. \emph{MNRAS}, 492(3), p. 4019-4032.
[\href{https://academic.oup.com/mnras/article/492/3/4019/5704414}{Publisher}]
[\href{https://arxiv.org/abs/2001.03552}{arXiv}]
[\href{https://capolitsch.github.io/trendfiltering/authors.html}{BibTeX}].
}
}
