% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-stats.R
\name{predict.trendfilter}
\alias{predict.trendfilter}
\title{Evaluate an optimized trend filtering estimate}
\usage{
\method{predict}{trendfilter}(
  obj,
  loss_func = "WMAE",
  lambda = "lambda_min",
  x_eval,
  nx_eval,
  zero_tol = 1e-06,
  ...
)
}
\arguments{
\item{obj}{An object of class '\code{\link[=cv.trendfilter]{cv.trendfilter}}' or
'\code{\link[=sure.trendfilter]{sure.trendfilter}}'.}

\item{loss_func}{(For class '\code{\link[=cv.trendfilter]{cv.trendfilter}}' only) A
string or index specifying which cross validation error curve stored within
the '\code{\link[=cv.trendfilter]{cv.trendfilter}}' object will be used to optimize
the trend filtering hyperparameter. Run \code{names(obj$loss_funcs)} to see the
available options. Defaults to \code{loss_func = "WMAE"}.}

\item{lambda}{One of \code{c("lambda_min", "lambda_1se")}. The choice of
hyperparameter that is used for optimized trend filtering estimate. Defaults
to \code{lambda = "lambda_min"}.
\itemize{
\item{\code{"lambda_min"}}: The hyperparameter value that minimizes the cross
validation error curve specified by \code{loss_func}.
\item{\code{"lambda_1se"}}: The largest hyperparameter value with a cross
validation error within 1 standard error of the minimum cross validation
error. This choice therefore favors simpler (i.e. smoother) trend filtering
estimates.
}}

\item{x_eval}{A grid of inputs to evaluate the optimized trend filtering
estimate on. Defaults to the observed values \code{x} when nothing is passed.}

\item{nx_eval}{Integer. If passed, overrides \code{x_eval} with
\code{x_eval = seq(min(x), max(x), length = nx_eval)}.}
}
\value{

}
\description{
Evaluate an optimized trend filtering object on a grid of input values. The
\code{lambda} argument (as well as the \code{loss_func} argument for
'\code{\link[=cv.trendfilter]{cv.trendfilter}}' objects) should be used to specify
the desired method for optimizing the trend filtering hyperparameter.
}
\details{
The motivation for using \code{lambda = "lambda_1se"} is essentially
Occam's razor: the two models yield results that are quantitatively very
close, so we favor the simpler model. See Section 7.10 of
\href{https://web.stanford.edu/~hastie/Papers/ESLII.pdf}{Hastie, Tibshirani, and Friedman (2009)} for more details on the
"one-standard-error rule".
}
\examples{
data("eclipsing_binary")
head(eclipsing_binary)

x <- eclipsing_binary$phase
y <- eclipsing_binary$flux
weights <- 1 / eclipsing_binary$std_err^2

cv_tf <- cv.trendfilter(x, y, weights,
  optimization_params = list(
    max_iter = 1e4,
    obj_tol = 1e-6,
    thinning = TRUE
  )
)

pred_tf <- predict(
  cv_tf,
  loss_func = "MAE",
  lambda = "lambda_1se",
  nx_eval = 1500L
)
}
\references{
\enumerate{
\item Politsch et al. (2020a). Trend filtering – I. A modern statistical tool
for time-domain astronomy and astronomical spectroscopy. \emph{MNRAS}, 492(3),
p. 4005-4018.
[\href{https://academic.oup.com/mnras/article/492/3/4005/5704413}{Publisher}]
[\href{https://arxiv.org/abs/1908.07151}{arXiv}]
[\href{https://capolitsch.github.io/trendfiltering/authors.html}{BibTeX}].
\item Politsch et al. (2020b). Trend Filtering – II. Denoising astronomical
signals with varying degrees of smoothness. \emph{MNRAS}, 492(3), p. 4019-4032.
[\href{https://academic.oup.com/mnras/article/492/3/4019/5704414}{Publisher}]
[\href{https://arxiv.org/abs/2001.03552}{arXiv}]
[\href{https://capolitsch.github.io/trendfiltering/authors.html}{BibTeX}].
}
}
\seealso{
\code{\link[=cv.trendfilter]{cv.trendfilter()}}, \code{\link[=sure.trendfilter]{sure.trendfilter()}}
}
