% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_trendfilter.R
\name{cv_tf-class}
\alias{cv_tf-class}
\alias{cv_tf}
\title{\code{cv_tf} class}
\description{
A list object returned by \code{\link[=cv_trendfilter]{cv_trendfilter()}}, with the following elements:
\itemize{
\item{\code{x_eval}:} Input grid used to evaluate the optimized trend filtering
estimate on.
\item{\code{tf_estimate}:} Optimized trend filtering estimate, evaluated at
\code{x_eval}.
\item{\code{validation_method}:} \code{paste0(V,"-fold CV")}
\item{\code{validation_functional}:} Type of error that validation was performed
on. Either one of \code{c("WMAE","WMSE","MAE","MSE")} or a custom function passed
by the user.
\item{\code{V}:} The number of folds the data are split into for the V-fold cross
validation.
\item{\code{lambdas}:} Vector of hyperparameter values evaluated in the grid
search (always returned in descending order).
\item{\code{edfs}:} Vector of effective degrees of freedom for all trend filtering
estimators fit during validation.
\item{\code{generalization_errors}:} Vector of cross validation estimates of the
trend filtering generalization error, for each hyperparameter value
(ordered corresponding to the descending-ordered \code{lambdas} vector).
\item{\code{se_errors}:} The standard errors of the cross validation errors.
These are particularly useful for implementing the
``1-standard-error rule''.
\item{\code{lambda_min}:} Hyperparameter value that minimizes the cross validation
generalization error curve.
\item{`lambda_1se`:} Largest hyperparameter value that is within one standard
error of the minimum hyperparameter's cross validation error.
\item{`lambda_choice`:} One of `c("lambda_min", "lambda_1se")`. The choice
of hyperparameter that is used for the returned trend filtering estimate
evaluation `tf_estimate`.
\item{`i_min`:} Index of `lambdas` that minimizes the cross validation
error.
\item{`i_1se`:} Index of `lambdas` that gives the largest hyperparameter
value that has a cross validation error within 1 standard error of the
minimum of the cross validation error curves.
\item{`edf_min`:} Effective degrees of freedom of the optimized trend
filtering estimator.
\item{`edf_1se`:} Effective degrees of freedom of the 1-stand-error rule
trend filtering estimator.
\item{`n_iter`:} The number of iterations needed for the ADMM algorithm to
converge within the given tolerance, for each hyperparameter value. If many
of these are exactly equal to `max_iter`, then their solutions have not
converged with the tolerance specified by `obj_tol`. In which case, it is
often prudent to increase `max_iter`.
\item{`x`:} Vector of observed inputs.
\item{`y:`} Vector of observed outputs.
\item{`weights`:} Weights for the observed outputs, defined as the reciprocal
variance of the additive noise that contaminates the signal.
\item{`fitted_values`:} Optimized trend filtering estimate, evaluated at the
observed inputs `x`.
\item{`residuals`:} `residuals = y - fitted_values`
\item{`k`:} Degree of the trend filtering estimator.
\item{`admm_params`:} List of parameter settings for the trend filtering ADMM
algorithm, constructed by passing the `optimization_params` list to
\code{\link[glmgen:trendfilter.control.list]{glmgen::trendfilter.control.list()}}.
\item{`thinning`:} Logical. If `TRUE`, then the data are preprocessed so that
a smaller, better conditioned data set is used for fitting.
\item{`x_scale`, `y_scale`, `data_scaled`:} For internal use.
}
}
\seealso{
\code{\link[=cv_trendfilter]{cv_trendfilter()}}
}
